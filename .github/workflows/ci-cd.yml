name: CI/CD Pipeline

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ dev ]

env:
  PYTHON_VERSION: '3.13'
  REPOSITORY: weather-source-etl

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    env:
      LOG_LEVEL: DEBUG
      DATA_OUTPUT_PATH: ./test_data
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        allow-prereleases: true
    
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt
        pip install pytest pytest-cov pytest-mock
        pip install -e .
    
    - name: List installed packages
      run: pip list
    
    - name: Create test data directory
      run: mkdir -p ./test_data
    
    - name: Show test directory structure
      run: |
        ls -R tests/
    
    - name: Run tests with coverage
      run: |
        python -m pytest tests/ -v --cov=src/ --cov-report=xml
    
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage.xml

  build-and-deploy:
    name: Build and Deploy
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    
    - name: Build and tag Docker image
      env:
        REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
      run: |
        # Build with commit SHA tag
        docker build \
          -t $REGISTRY/${{ env.REPOSITORY }}:${{ github.sha }} \
          -t $REGISTRY/${{ env.REPOSITORY }}:latest \
          -f deploy/docker/Dockerfile .
    
    - name: Push Docker image
      env:
        REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
      run: |
        # Push both tags
        docker push $REGISTRY/${{ env.REPOSITORY }}:${{ github.sha }}
        docker push $REGISTRY/${{ env.REPOSITORY }}:latest
        
        echo "::notice::Successfully pushed image tags: ${{ github.sha }} and latest"